kind: Template
apiVersion: template.openshift.io/v1
metadata:
  annotations:
    description: Minio Server with persistent storage.
    openshift.io/display-name: Minio-Object-Storage
    tags: infrastructure,minio,s3,objectstore
    template.openshift.io/long-description: >-
      This template deploys a minio server within OpenShift, backed by persistent volume storage.
    template.openshift.io/provider-display-name: NoverIT
  name: minio
  namespace: openshift
message: |-
  The following service(s) have been created in your project: ${NAME}.
  labels:
  template: minio
  app: minio
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      annotations:
        description: Keeps track of changes in the application image
      name: ${NAME}
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      annotations:
        description: Defines how to build the application
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${NAME}
    spec:
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: base-centos7:latest
            namespace: ${NAMESPACE}
        type: Docker
      triggers:
      - type: ImageChange
      - type: ConfigChange
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      generation: 1
      labels:
        app: '${NAME}'
      name: '${NAME}'
    spec:
      replicas: 1
      selector:
        app: '${NAME}'
        deploymentconfig: '${NAME}'
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: '${NAME}'
            deploymentconfig: '${NAME}'
        spec:
          containers:
            - env:
                - name: MINIO_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      key: minioAccessKey
                      name: '${NAME}'
                - name: MINIO_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      key: minioSecretKey
                      name: '${NAME}'
                - name: MINIO_DEFAULT_BUCKET
                  value: '${MINIO_DEFAULT_BUCKET}'
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              image: 'docker-registry.default.svc:5000/default/${NAME}'
              imagePullPolicy: IfNotPresent
              name: '${NAME}'
              ports:
                - containerPort: 9000
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/minio/data
                  name: '${NAME}'
              readinessProbe:
                httpGet:
                  path: /minio/health/ready
                  port: 9000
                initialDelaySeconds: 120
                periodSeconds: 20
              livenessProbe:
                httpGet:
                  path: /minio/health/live
                  port: 9000
                initialDelaySeconds: 120
                periodSeconds: 20
          dnsPolicy: ClusterFirst
          nodeSelector:
            node-role.kubernetes.io/compute: 'true'
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 10
          volumes:
            - name: '${NAME}'
              persistentVolumeClaim:
                claimName: '${NAME}'
      test: false
      triggers:
        - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      labels:
        app: '${NAME}'
      name: '${NAME}'
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: '${VOLUME_CAPACITY}'
      storageClassName: '${STORAGE_CLASS_NAME}'
    status: {}
  - kind: Service
    apiVersion: v1
    metadata:
      creationTimestamp: null
      labels:
        app: '${NAME}'
      name: '${NAME}'
    spec:
      ports:
        - name: 9000-tcp
          port: 9000
          protocol: TCP
          targetPort: 9000
      selector:
        deploymentconfig: '${NAME}'
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - kind: Route
    apiVersion: v1
    metadata:
      annotations:

      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN_NAME}
      to:
        kind: Service
        name: ${NAME}
  - kind: Secret
    apiVersion: v1
    metadata:
      labels:
        app: '${NAME}'
      name: '${NAME}'
    stringData:
      minioAccessKey: '${MINIO_ACCESS_KEY}'
      minioSecretKey: '${MINIO_SECRET_KEY}'
parameters:
  - name: NAME
    displayName: Name to apply to objects in the template
    required: true
    value: minio
  - name: MINIO_ACCESS_KEY
    displayName: Minio access key
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    required: true
  - name: MINIO_SECRET_KEY
    displayName: Minio secret key
    from: '[a-zA-Z0-9]{16}'
    generate: expression
    required: true
  - name: MINIO_DEFAULT_BUCKET
    displayName: Minio default bucket name
    required: false
    value: default
  - name: VOLUME_CAPACITY
    description: 'Volume space available to Minio server for files, e.g. 512Mi, 2Gi.'
    displayName: Volume Capacity
    required: true
    value: 10Gi
  - name: STORAGE_CLASS_NAME
    description: Storage Class for Persistent Volume
    displayName: Storage Class
    required: false
    value: standard
  - name: APPLICATION_DOMAIN_NAME
    description: The exposed hostname that will route to the minio service, if left blank a value will be defaulted.
    displayName: Application Public Hostname
    value: ''
  - name: SOURCE_REPOSITORY_URL
    description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    required: true
    value: https://github.com/kalise/minio.git
  - name: SOURCE_REPOSITORY_REF
    description: Set this to a branch name, tag or other ref of your repository if you
      are not using the default branch.
    displayName: Git Reference
  - name: CONTEXT_DIR
    description: Set this to the relative path to your project if it is not in the root of your repository.
    displayName: Context Directory
